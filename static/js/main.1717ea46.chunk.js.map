{"version":3,"sources":["todo/Todo.js","App.js","index.js"],"names":["Todo","useState","inputdata","setInputdata","localData","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","e","target","onClick","index","Item_for_edit","find","editItem","updatedItems","filter","deleteItem","App","ReactDOM","render","document","getElementById"],"mappings":"gSA0HeA,EA/GF,WACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAVP,WACnB,IAAMG,EAAYC,aAAaC,QAAQ,cACvC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,GAK0BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KACMC,EAAU,WACd,GAAKd,EAEE,GAAIA,GAAaY,EACtBH,EACED,EAAMO,KAAI,SAACC,GACT,OAAIA,EAAQC,KAAOP,EACV,2BAAKM,GAAZ,IAAqBE,KAAMlB,IAEtBgB,MAGXf,EAAa,IACbU,EAAc,MACdE,GAAgB,OACX,CACL,IAAMM,EAAiB,CACrBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAERS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SAnBbsB,MAAM,sBA+CV,OAJAC,qBAAU,WACRrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACjD,CAACA,IAGF,8BACE,qBAAKmB,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,qBAAKC,IAAI,oBAAoBC,IAAI,aACjC,uEAEF,sBAAKF,UAAU,WAAf,UACE,uBACEG,KAAK,OACLC,YAAY,kBACZJ,UAAU,eACVK,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAOjC,EAAaiC,EAAEC,OAAOH,UAExCpB,EACC,mBAAGe,UAAU,sBAAsBS,QAAStB,IAE5C,mBAAGa,UAAU,qBAAqBS,QAAStB,OAI/C,qBAAKa,UAAU,YAAf,SACGnB,EAAMO,KAAI,SAACC,GACV,OACE,sBAAKW,UAAU,WAAf,UACE,+BAAKX,EAAQE,KAAb,OACA,sBAAKS,UAAU,WAAf,UACE,mBACEA,UAAU,sBACVS,QAAS,kBAvDZ,SAACC,GAChB,IAAMC,EAAgB9B,EAAM+B,MAAK,SAACvB,GAChC,OAAOA,EAAQC,KAAOoB,KAExBpC,EAAaqC,EAAcpB,MAC3BP,EAAc0B,GACdxB,GAAgB,GAiDiB2B,CAASxB,EAAQC,OAElC,mBACEU,UAAU,2BACVS,QAAS,kBAlDV,SAACC,GAClB,IAAMI,EAAejC,EAAMkC,QAAO,SAAC1B,GACjC,OAAOA,EAAQC,KAAOoB,KAExB5B,EAASgC,GA8CwBE,CAAW3B,EAAQC,YATTD,EAAQC,SAgB7C,qBAAKU,UAAU,YAAf,SACE,wBACEA,UAAU,eACV,oBAAkB,aAClBS,QAtDM,WAChB3B,EAAS,KAkDD,SAKE,0DCrGCmC,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCFNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1717ea46.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./todo.css\";\r\n\r\nconst getLocalData = () => {\r\n  const localData = localStorage.getItem(\"myTodoList\");\r\n  if (localData) {\r\n    return JSON.parse(localData);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\nconst Todo = () => {\r\n  const [inputdata, setInputdata] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalData());\r\n  const [isEditItem, setIsEditItem] = useState(\"\");\r\n  const [toggleButton, setToggleButton] = useState(false);\r\n  const addItem = () => {\r\n    if (!inputdata) {\r\n      alert(\"plz fill the data\");\r\n    } else if (inputdata && toggleButton) {\r\n      setItems(\r\n        items.map((curElem) => {\r\n          if (curElem.id === isEditItem) {\r\n            return { ...curElem, name: inputdata };\r\n          }\r\n          return curElem;\r\n        })\r\n      );\r\n      setInputdata(\"\");\r\n      setIsEditItem(null);\r\n      setToggleButton(false);\r\n    } else {\r\n      const myNewInputData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputdata,\r\n      };\r\n      setItems([...items, myNewInputData]);\r\n      setInputdata(\"\");\r\n    }\r\n  };\r\n\r\n  const editItem = (index) => {\r\n    const Item_for_edit = items.find((curElem) => {\r\n      return curElem.id === index;\r\n    });\r\n    setInputdata(Item_for_edit.name);\r\n    setIsEditItem(index);\r\n    setToggleButton(true);\r\n  };\r\n\r\n  const deleteItem = (index) => {\r\n    const updatedItems = items.filter((curElem) => {\r\n      return curElem.id !== index;\r\n    });\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  const removeAll = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"myTodoList\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <img src=\"./images/todo.svg\" alt=\"todo_pic\" />\r\n            <figcaption>Add Your List Here..✔</figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"✍ Add Item\"\r\n              className=\"form-control\"\r\n              value={inputdata}\r\n              onChange={(e) => setInputdata(e.target.value)}\r\n            />\r\n            {toggleButton ? (\r\n              <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\r\n            ) : (\r\n              <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n            )}\r\n          </div>\r\n          {/* show items here */}\r\n          <div className=\"showItems\">\r\n            {items.map((curElem) => {\r\n              return (\r\n                <div className=\"eachItem\" key={curElem.id}>\r\n                  <h3>{curElem.name} </h3>\r\n                  <div className=\"todo-btn\">\r\n                    <i\r\n                      className=\"far fa-edit add-btn\"\r\n                      onClick={() => editItem(curElem.id)}\r\n                    ></i>\r\n                    <i\r\n                      className=\"far fa-trash-alt add-btn\"\r\n                      onClick={() => deleteItem(curElem.id)}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"Remove All\"\r\n              onClick={removeAll}\r\n            >\r\n              <span>Check List</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Todo from \"./todo/Todo\";\n\nconst App = () => {\n  return (\n    <div>\n      <Todo />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}